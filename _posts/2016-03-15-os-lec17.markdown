---
layout: post
title:  "OS Lecture 17"
date:   2016-03-15 14:30:00 -0500
categories: cs580
---



## Mem mngmt

* Binding - early, late	
* dynamic binding
* relocation
	
	

## Multiprogramming
* alloating memory to multiple processes running at once
* Traditional fixed partitions
	* ![](http://bgshin.github.io/images/OSLEC17A.png)
* Longterm scheduler
	* selects a partition
		* not in use currently
		* large enough
		* ![]()
		* multiple Q's - 작은거에 맞는건 작은큐, 미디엄큐, 라지큐
			* 

* Strategies
	* first fit - 젤 간단
	* best fit - least amt of access, 소트필요
	* worst fit - x
* Variable partitions
	* start with one big partition
	* select a partition and slice off the excess
	* ![](http://bgshin.github.io/images/OSLEC17B.png)
	* Strategies
		* first fit - 장점 - 간단 , 사이즈 관리안해도됨
		* best fit - External을 생기게할수있다
		* worst fit - 2를 남기면 쓸모없어서 65한테감
			
## Fragmentation
* External - wasted partitions - 8을 10에 할당했을때
	* scattered little pieces
* Internal - wasting part of a partition (픽스드일때 파티션 통짜로 다 안쓸경우)
* Solution to external frag
	* repacking
	* paging?

	
## Paging
* Divide memory into fixed size pages
	* size is a power of 2
	* ![](http://bgshin.github.io/images/OSLEC17C.png)
	* eg) n=12, b=10, 
		* pagesize = 2^10 = 1K
		* num of pages = 2^12  = 4k
	* ![](http://bgshin.github.io/images/OSLEC17D.png)
	* ![](http://bgshin.github.io/images/OSLEC17E.png)
* No external fragmentation
* small amount of internal frag - 3.5필요시 4를 얼록하기떔
* Every process has its own page table
* contex switch switches page tables
* memory protection
	* by keeping page talbes disjoint
	* maintains a free list of unallocated pages
* shared memory
	* put the same page num in more than one table
	* eg) text segments, data structures
* 실제 pagetable은  2칼럼아니고 1칼럼이면 됨 - 로지컬넘버는 단순 증가숫자라서
* p/d찾으러 두번감 - ![](http://bgshin.github.io/images/OSLEC17F.png)
* MMU has a page cache
	* repeated access to the same (recent) pages take only one trip across the mem bus (SW)
	* cache use CAM - content addressable memory
	* ![](http://bgshin.github.io/images/OSLEC17G.png) (HW)



* paging sloves seg, frag, sharing probs